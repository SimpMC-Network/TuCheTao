plugins {
    id 'java'
    // Note: We apply the shadow plugin only in the modules that need it.
    id 'com.gradleup.shadow' version '8.3.3' apply false
}

group = 'me.typical'
version = '1.0-BETA'

subprojects {
    apply plugin: 'java-library'

    repositories {
        mavenCentral()
        maven {
            name = "papermc-repo"
            url = "https://repo.papermc.io/repository/maven-public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
        maven {
            name = "codemc-releases"
            url = "https://repo.codemc.io/repository/maven-releases/"
        }
        maven {
            name = "codemc-snapshots"
            url = "https://repo.codemc.io/repository/maven-snapshots/"
        }
        maven {
            url = 'https://repo.extendedclip.com/releases/'
        }
        maven {
            name = 'rosewood-playerpoints'
            url = 'https://repo.rosewooddev.io/repository/public/'
        }
        maven {
            name = 'mojang-ass'
            url = 'https://libraries.minecraft.net/'
        }
        maven {
            name = 'nightexpress'
            url = 'https://repo.nightexpressdev.com/releases'
        }
        maven {
            name = 'phoenix'
            url = "https://nexus.phoenixdevt.fr/repository/maven-public/"
        }
        maven {
            name = 'matteodev'
            url = 'https://maven.devs.beer/'
        }
    }
}

// Set the Java version for all subprojects
def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

